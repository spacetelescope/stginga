[tool:pytest]
addopts = --doctest-ignore-import-errors
minversion = 3.1
testpaths = "stginga" "docs"
norecursedirs = build docs/_build
astropy_header = true
filterwarnings =
    ignore:numpy.ufunc size changed

[metadata]
name = stginga
description = Ginga products specific to STScI data analysis
long_description = Ginga products specific to STScI data analysis
long_description_content_type = text/plain
keywords = astronomy, astrophysics, image, visualization, HST, JWST
author = STScI
author_email = help@stsci.edu
license = BSD
license_file = LICENSE.rst
url = https://github.com/spacetelescope/stginga
edit_on_github = False
github_project = spacetelescope/stginga
classifiers =
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Astronomy
  Topic :: Software Development :: Libraries :: Python Modules

[options]
packages = find:
zip_safe = False
setup_requires =
    setuptools_scm
install_requires =
    astropy>=3
    ginga>=2.7
    scipy>=0.18
python_requires = >=3.5

[options.extras_require]
all=
    photutils
test =
    pytest-astropy
docs =
    numpy
    scipy
    sphinx-astropy
    astropy
    ginga

[options.package_data]
stginga = data/*, examples/*/*

[options.entry_points]
console_scripts =
    stginga = stginga.gingawrapper:_main

[coverage:run]
source = stginga
omit =
    stginga/_astropy_init*
    stginga/conftest*
    stginga/setup_package*
    stginga/*/setup_package*
    stginga/*/*/setup_package*
    stginga/tests/*
    stginga/*/tests/*
    stginga/*/*/tests/*
    stginga/version*
    */stginga/_astropy_init*
    */stginga/conftest*
    */stginga/setup_package*
    */stginga/*/setup_package*
    */stginga/*/*/setup_package*
    */stginga/tests/*
    */stginga/*/tests/*
    */stginga/*/*/tests/*
    */stginga/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
